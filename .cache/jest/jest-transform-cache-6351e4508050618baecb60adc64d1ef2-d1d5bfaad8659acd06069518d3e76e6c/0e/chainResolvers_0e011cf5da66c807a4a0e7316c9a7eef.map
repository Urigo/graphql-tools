{"file":"/home/ardat_000/Guild/graphql-tools/packages/schema/src/chainResolvers.ts","mappings":";;;AAAA,qCAAyF;AAEzF,SAAgB,cAAc,CAAC,SAAgD;IAC7E,OAAO,CAAC,IAAS,EAAE,IAAgC,EAAE,GAAQ,EAAE,IAAwB,EAAE,EAAE,CACzF,SAAS,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,WAAW,EAAE,EAAE;QACrC,IAAI,WAAW,IAAI,IAAI,EAAE;YACvB,OAAO,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;SAC3C;QAED,OAAO,8BAAoB,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;IACrD,CAAC,EAAE,IAAI,CAAC,CAAC;AACb,CAAC;AATD,wCASC","names":[],"sources":["/home/ardat_000/Guild/graphql-tools/packages/schema/src/chainResolvers.ts"],"sourcesContent":["import { defaultFieldResolver, GraphQLResolveInfo, GraphQLFieldResolver } from 'graphql';\n\nexport function chainResolvers(resolvers: Array<GraphQLFieldResolver<any, any>>) {\n  return (root: any, args: { [argName: string]: any }, ctx: any, info: GraphQLResolveInfo) =>\n    resolvers.reduce((prev, curResolver) => {\n      if (curResolver != null) {\n        return curResolver(prev, args, ctx, info);\n      }\n\n      return defaultFieldResolver(prev, args, ctx, info);\n    }, root);\n}\n"],"version":3}