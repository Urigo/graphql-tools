{"file":"/home/ardat_000/Guild/graphql-tools/packages/mock/src/utils.ts","mappings":";;;AAEA,SAAgB,MAAM;IACpB,OAAO,sCAAsC,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE;QACjE,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;QACnC,kCAAkC;QAClC,MAAM,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;QACzC,OAAO,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IACxB,CAAC,CAAC,CAAC;AACL,CAAC;AAPD,wBAOC;AAEM,MAAM,gBAAgB,GAAG,GAAG,EAAE;IACnC,0DAA0D;IAC1D,4CAA4C;IAC5C,OAAO,CAAC,CAAC;AACX,CAAC,CAAC;AAJW,QAAA,gBAAgB,oBAI3B;AAEK,MAAM,UAAU,GAAG,CAAI,GAAQ,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;AAA1E,QAAA,UAAU,cAAgE;AAEvF,SAAgB,OAAO,CAA2C,QAAgB,EAAE,GAAS;IAC3F,OAAO,EAAE,IAAI,EAAE,EAAE,GAAG,EAAE,QAAQ,EAAE,EAAE,CAAC;AACrC,CAAC;AAFD,0BAEC;AAED,SAAgB,QAAQ,CAAC,KAAU;IACjC,OAAO,KAAK,KAAK,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAC1D,CAAC;AAFD,4BAEC;AAED,SAAgB,wBAAwB,CAAC,MAA2B,EAAE,MAA2B;IAC/F,MAAM,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;QAChD,IAAI,CAAC,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE;YAClD,MAAM,kBAAkB,GAAG,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YACzE,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,IAAI,EAAE,kBAAkB,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC;SAC3F;IACH,CAAC,CAAC,CAAC;AACL,CAAC;AAPD,4DAOC;AAED,SAAgB,YAAY,CAAC,MAA2B,EAAE,GAAG,OAAmC;IAC9F,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;QACvB,IAAI,KAAK,GAAG,MAAM,CAAC;QACnB,OAAO,KAAK,IAAI,IAAI,EAAE;YACpB,wBAAwB,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;YACxC,KAAK,GAAG,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;SACtC;IACH,CAAC,CAAC,CAAC;IACH,OAAO,MAAM,CAAC;AAChB,CAAC;AATD,oCASC","names":[],"sources":["/home/ardat_000/Guild/graphql-tools/packages/mock/src/utils.ts"],"sourcesContent":["import { Ref, KeyTypeConstraints } from './types';\n\nexport function uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = (Math.random() * 16) | 0;\n    // eslint-disable-next-line eqeqeq\n    const v = c == 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\nexport const randomListLength = () => {\n  // Mocking has always returned list of length 2 by default\n  // return 1 + Math.round(Math.random() * 10)\n  return 2;\n};\n\nexport const takeRandom = <T>(arr: T[]) => arr[Math.floor(Math.random() * arr.length)];\n\nexport function makeRef<KeyT extends KeyTypeConstraints = string>(typeName: string, key: KeyT): Ref<KeyT> {\n  return { $ref: { key, typeName } };\n}\n\nexport function isObject(thing: any) {\n  return thing === Object(thing) && !Array.isArray(thing);\n}\n\nexport function copyOwnPropsIfNotPresent(target: Record<string, any>, source: Record<string, any>) {\n  Object.getOwnPropertyNames(source).forEach(prop => {\n    if (!Object.getOwnPropertyDescriptor(target, prop)) {\n      const propertyDescriptor = Object.getOwnPropertyDescriptor(source, prop);\n      Object.defineProperty(target, prop, propertyDescriptor == null ? {} : propertyDescriptor);\n    }\n  });\n}\n\nexport function copyOwnProps(target: Record<string, any>, ...sources: Array<Record<string, any>>) {\n  sources.forEach(source => {\n    let chain = source;\n    while (chain != null) {\n      copyOwnPropsIfNotPresent(target, chain);\n      chain = Object.getPrototypeOf(chain);\n    }\n  });\n  return target;\n}\n"],"version":3}