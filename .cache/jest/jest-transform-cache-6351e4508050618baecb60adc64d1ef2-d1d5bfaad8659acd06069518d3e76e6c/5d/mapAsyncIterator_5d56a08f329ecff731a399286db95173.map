{"file":"/home/ardat_000/Guild/graphql-tools/packages/utils/src/mapAsyncIterator.ts","mappings":";;;AAAA;;;GAGG;AACH,SAAgB,gBAAgB,CAC9B,QAA0B,EAC1B,QAAsC,EACtC,cAAoB;IAEpB,IAAI,OAAY,CAAC;IACjB,IAAI,WAAgB,CAAC;IAErB,IAAI,OAAO,QAAQ,CAAC,MAAM,KAAK,UAAU,EAAE;QACzC,OAAO,GAAG,QAAQ,CAAC,MAAM,CAAC;QAC1B,WAAW,GAAG,CAAC,KAAU,EAAE,EAAE;YAC3B,MAAM,OAAO,GAAG,GAAG,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAC5C,OAAO,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QACvD,CAAC,CAAC;KACH;IAED,SAAS,SAAS,CAAC,MAAW;QAC5B,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,cAAc,EAAE,WAAW,CAAC,CAAC;IACxG,CAAC;IAED,IAAI,SAAc,CAAC;IACnB,IAAI,cAAc,EAAE;QAClB,sDAAsD;QACtD,MAAM,MAAM,GAAG,cAAc,CAAC;QAC9B,SAAS,GAAG,CAAC,KAAU,EAAE,EAAE,CAAC,aAAa,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,IAAI,CAAC,cAAc,EAAE,WAAW,CAAC,CAAC;KAC5F;IAED,OAAO;QACL,IAAI;YACF,OAAO,QAAQ,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;QACpD,CAAC;QACD,MAAM;YACJ,OAAO,OAAO;gBACZ,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,SAAS,CAAC;gBACnD,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;QACxD,CAAC;QACD,KAAK,CAAC,KAAU;YACd,IAAI,OAAO,QAAQ,CAAC,KAAK,KAAK,UAAU,EAAE;gBACxC,OAAO,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;aACzD;YACD,OAAO,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QAClD,CAAC;QACD,CAAC,MAAM,CAAC,aAAa,CAAC;YACpB,OAAO,IAAI,CAAC;QACd,CAAC;KACK,CAAC;AACX,CAAC;AA9CD,4CA8CC;AAED,SAAS,aAAa,CAAO,KAAQ,EAAE,QAAsC;IAC3E,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC1D,CAAC;AAED,SAAS,cAAc,CAAI,KAAQ;IACjC,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;AAChC,CAAC","names":[],"sources":["/home/ardat_000/Guild/graphql-tools/packages/utils/src/mapAsyncIterator.ts"],"sourcesContent":["/**\n * Given an AsyncIterable and a callback function, return an AsyncIterator\n * which produces values mapped via calling the callback function.\n */\nexport function mapAsyncIterator<T, U>(\n  iterator: AsyncIterator<T>,\n  callback: (value: T) => Promise<U> | U,\n  rejectCallback?: any\n): AsyncIterator<U> {\n  let $return: any;\n  let abruptClose: any;\n\n  if (typeof iterator.return === 'function') {\n    $return = iterator.return;\n    abruptClose = (error: any) => {\n      const rethrow = () => Promise.reject(error);\n      return $return.call(iterator).then(rethrow, rethrow);\n    };\n  }\n\n  function mapResult(result: any) {\n    return result.done ? result : asyncMapValue(result.value, callback).then(iteratorResult, abruptClose);\n  }\n\n  let mapReject: any;\n  if (rejectCallback) {\n    // Capture rejectCallback to ensure it cannot be null.\n    const reject = rejectCallback;\n    mapReject = (error: any) => asyncMapValue(error, reject).then(iteratorResult, abruptClose);\n  }\n\n  return {\n    next() {\n      return iterator.next().then(mapResult, mapReject);\n    },\n    return() {\n      return $return\n        ? $return.call(iterator).then(mapResult, mapReject)\n        : Promise.resolve({ value: undefined, done: true });\n    },\n    throw(error: any) {\n      if (typeof iterator.throw === 'function') {\n        return iterator.throw(error).then(mapResult, mapReject);\n      }\n      return Promise.reject(error).catch(abruptClose);\n    },\n    [Symbol.asyncIterator]() {\n      return this;\n    },\n  } as any;\n}\n\nfunction asyncMapValue<T, U>(value: T, callback: (value: T) => Promise<U> | U): Promise<U> {\n  return new Promise(resolve => resolve(callback(value)));\n}\n\nfunction iteratorResult<T>(value: T): IteratorResult<T> {\n  return { value, done: false };\n}\n"],"version":3}