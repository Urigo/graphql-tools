60b2f316d804068fd2077322aa00954e
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.addCatchUndefinedToSchema = void 0;
const graphql_1 = require("graphql");
const utils_1 = require("@graphql-tools/utils");
function decorateToCatchUndefined(fn, hint) {
    const resolve = fn == null ? graphql_1.defaultFieldResolver : fn;
    return (root, args, ctx, info) => {
        const result = resolve(root, args, ctx, info);
        if (typeof result === 'undefined') {
            throw new Error(`Resolver for "${hint}" returned undefined`);
        }
        return result;
    };
}
function addCatchUndefinedToSchema(schema) {
    return utils_1.mapSchema(schema, {
        [utils_1.MapperKind.OBJECT_FIELD]: (fieldConfig, fieldName, typeName) => ({
            ...fieldConfig,
            resolve: decorateToCatchUndefined(fieldConfig.resolve, `${typeName}.${fieldName}`),
        }),
    });
}
exports.addCatchUndefinedToSchema = addCatchUndefinedToSchema;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL2hvbWUvYXJkYXRfMDAwL0d1aWxkL2dyYXBocWwtdG9vbHMvcGFja2FnZXMvc2NoZW1hL3NyYy9hZGRDYXRjaFVuZGVmaW5lZFRvU2NoZW1hLnRzIiwibWFwcGluZ3MiOiI7OztBQUFBLHFDQUFvRjtBQUNwRixnREFBNkQ7QUFFN0QsU0FBUyx3QkFBd0IsQ0FBQyxFQUFrQyxFQUFFLElBQVk7SUFDaEYsTUFBTSxPQUFPLEdBQUcsRUFBRSxJQUFJLElBQUksQ0FBQyxDQUFDLENBQUMsOEJBQW9CLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztJQUN2RCxPQUFPLENBQUMsSUFBSSxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLEVBQUU7UUFDL0IsTUFBTSxNQUFNLEdBQUcsT0FBTyxDQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQzlDLElBQUksT0FBTyxNQUFNLEtBQUssV0FBVyxFQUFFO1lBQ2pDLE1BQU0sSUFBSSxLQUFLLENBQUMsaUJBQWlCLElBQUksc0JBQXNCLENBQUMsQ0FBQztTQUM5RDtRQUNELE9BQU8sTUFBTSxDQUFDO0lBQ2hCLENBQUMsQ0FBQztBQUNKLENBQUM7QUFFRCxTQUFnQix5QkFBeUIsQ0FBQyxNQUFxQjtJQUM3RCxPQUFPLGlCQUFTLENBQUMsTUFBTSxFQUFFO1FBQ3ZCLENBQUMsa0JBQVUsQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLFdBQVcsRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFFLEVBQUUsQ0FBQyxDQUFDO1lBQ2hFLEdBQUcsV0FBVztZQUNkLE9BQU8sRUFBRSx3QkFBd0IsQ0FBQyxXQUFXLENBQUMsT0FBTyxFQUFFLEdBQUcsUUFBUSxJQUFJLFNBQVMsRUFBRSxDQUFDO1NBQ25GLENBQUM7S0FDSCxDQUFDLENBQUM7QUFDTCxDQUFDO0FBUEQsOERBT0MiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL2hvbWUvYXJkYXRfMDAwL0d1aWxkL2dyYXBocWwtdG9vbHMvcGFja2FnZXMvc2NoZW1hL3NyYy9hZGRDYXRjaFVuZGVmaW5lZFRvU2NoZW1hLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEdyYXBoUUxGaWVsZFJlc29sdmVyLCBkZWZhdWx0RmllbGRSZXNvbHZlciwgR3JhcGhRTFNjaGVtYSB9IGZyb20gJ2dyYXBocWwnO1xuaW1wb3J0IHsgbWFwU2NoZW1hLCBNYXBwZXJLaW5kIH0gZnJvbSAnQGdyYXBocWwtdG9vbHMvdXRpbHMnO1xuXG5mdW5jdGlvbiBkZWNvcmF0ZVRvQ2F0Y2hVbmRlZmluZWQoZm46IEdyYXBoUUxGaWVsZFJlc29sdmVyPGFueSwgYW55PiwgaGludDogc3RyaW5nKTogR3JhcGhRTEZpZWxkUmVzb2x2ZXI8YW55LCBhbnk+IHtcbiAgY29uc3QgcmVzb2x2ZSA9IGZuID09IG51bGwgPyBkZWZhdWx0RmllbGRSZXNvbHZlciA6IGZuO1xuICByZXR1cm4gKHJvb3QsIGFyZ3MsIGN0eCwgaW5mbykgPT4ge1xuICAgIGNvbnN0IHJlc3VsdCA9IHJlc29sdmUocm9vdCwgYXJncywgY3R4LCBpbmZvKTtcbiAgICBpZiAodHlwZW9mIHJlc3VsdCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgUmVzb2x2ZXIgZm9yIFwiJHtoaW50fVwiIHJldHVybmVkIHVuZGVmaW5lZGApO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYWRkQ2F0Y2hVbmRlZmluZWRUb1NjaGVtYShzY2hlbWE6IEdyYXBoUUxTY2hlbWEpOiBHcmFwaFFMU2NoZW1hIHtcbiAgcmV0dXJuIG1hcFNjaGVtYShzY2hlbWEsIHtcbiAgICBbTWFwcGVyS2luZC5PQkpFQ1RfRklFTERdOiAoZmllbGRDb25maWcsIGZpZWxkTmFtZSwgdHlwZU5hbWUpID0+ICh7XG4gICAgICAuLi5maWVsZENvbmZpZyxcbiAgICAgIHJlc29sdmU6IGRlY29yYXRlVG9DYXRjaFVuZGVmaW5lZChmaWVsZENvbmZpZy5yZXNvbHZlLCBgJHt0eXBlTmFtZX0uJHtmaWVsZE5hbWV9YCksXG4gICAgfSksXG4gIH0pO1xufVxuIl0sInZlcnNpb24iOjN9