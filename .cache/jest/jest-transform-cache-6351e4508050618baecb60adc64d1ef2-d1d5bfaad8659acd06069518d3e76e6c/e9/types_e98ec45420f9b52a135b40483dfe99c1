9e27e0a9293137318060a35372f2f9ba
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isRecord = exports.assertIsRef = exports.isRef = void 0;
function isRef(maybeRef) {
    return maybeRef && typeof maybeRef === 'object' && maybeRef.hasOwnProperty('$ref');
}
exports.isRef = isRef;
function assertIsRef(maybeRef, message) {
    if (!isRef(maybeRef)) {
        throw new Error(message || `Expected ${maybeRef} to be a valid Ref.`);
    }
}
exports.assertIsRef = assertIsRef;
function isRecord(obj) {
    return typeof obj === 'object' && obj !== null;
}
exports.isRecord = isRecord;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,