{"file":"/home/ardat_000/Guild/graphql-tools/packages/utils/src/stub.ts","mappings":";;;AAAA,qCAoBiB;AAKjB,SAAgB,eAAe,CAC7B,IAAY,EACZ,IAAS;IAET,IAAI,WAAgB,CAAC;IACrB,IAAI,IAAI,KAAK,QAAQ,EAAE;QACrB,WAAW,GAAG,2BAAiB,CAAC;KACjC;SAAM,IAAI,IAAI,KAAK,WAAW,EAAE;QAC/B,WAAW,GAAG,8BAAoB,CAAC;KACpC;SAAM;QACL,WAAW,GAAG,gCAAsB,CAAC;KACtC;IAED,OAAO,IAAI,WAAW,CAAC;QACrB,IAAI;QACJ,MAAM,EAAE;YACN,MAAM,EAAE;gBACN,IAAI,EAAE,uBAAa;aACpB;SACF;KACF,CAAC,CAAC;AACL,CAAC;AArBD,0CAqBC;AAKD,SAAgB,UAAU,CAAC,IAAc,EAAE,IAAS;IAClD,QAAQ,IAAI,CAAC,IAAI,EAAE;QACjB,KAAK,cAAI,CAAC,SAAS;YACjB,OAAO,IAAI,qBAAW,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;QACtD,KAAK,cAAI,CAAC,aAAa;YACrB,OAAO,IAAI,wBAAc,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;QACzD;YACE,IAAI,IAAI,KAAK,QAAQ,EAAE;gBACrB,OAAO,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;aACnD;YACD,OAAO,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;KACpD;AACH,CAAC;AAZD,gCAYC;AAED,SAAgB,WAAW,CAAC,IAAsB;IAChD,IAAI,sBAAY,CAAC,IAAI,CAAC,IAAI,yBAAe,CAAC,IAAI,CAAC,IAAI,2BAAiB,CAAC,IAAI,CAAC,EAAE;QAC1E,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAChC,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACvC,OAAO,UAAU,CAAC,MAAM,KAAK,CAAC,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC;KAC3E;IAED,OAAO,KAAK,CAAC;AACf,CAAC;AARD,kCAQC;AAED,SAAgB,iBAAiB,CAAC,IAAsB;IACtD,QAAQ,IAAI,CAAC,IAAI,EAAE;QACjB,KAAK,oBAAU,CAAC,IAAI;YAClB,OAAO,oBAAU,CAAC;QACpB,KAAK,sBAAY,CAAC,IAAI;YACpB,OAAO,sBAAY,CAAC;QACtB,KAAK,uBAAa,CAAC,IAAI;YACrB,OAAO,uBAAa,CAAC;QACvB,KAAK,wBAAc,CAAC,IAAI;YACtB,OAAO,wBAAc,CAAC;QACxB,KAAK,mBAAS,CAAC,IAAI;YACjB,OAAO,mBAAS,CAAC;QACnB;YACE,OAAO,IAAI,CAAC;KACf;AACH,CAAC;AAfD,8CAeC","names":[],"sources":["/home/ardat_000/Guild/graphql-tools/packages/utils/src/stub.ts"],"sourcesContent":["import {\n  GraphQLObjectType,\n  GraphQLInterfaceType,\n  GraphQLInputObjectType,\n  GraphQLString,\n  GraphQLNamedType,\n  GraphQLInt,\n  GraphQLFloat,\n  GraphQLBoolean,\n  GraphQLID,\n  isObjectType,\n  isInterfaceType,\n  isInputObjectType,\n  TypeNode,\n  Kind,\n  GraphQLType,\n  GraphQLList,\n  GraphQLNonNull,\n  GraphQLOutputType,\n  GraphQLInputType,\n} from 'graphql';\n\nexport function createNamedStub(name: string, type: 'object'): GraphQLObjectType;\nexport function createNamedStub(name: string, type: 'interface'): GraphQLInterfaceType;\nexport function createNamedStub(name: string, type: 'input'): GraphQLInputObjectType;\nexport function createNamedStub(\n  name: string,\n  type: any\n): GraphQLObjectType | GraphQLInterfaceType | GraphQLInputObjectType {\n  let constructor: any;\n  if (type === 'object') {\n    constructor = GraphQLObjectType;\n  } else if (type === 'interface') {\n    constructor = GraphQLInterfaceType;\n  } else {\n    constructor = GraphQLInputObjectType;\n  }\n\n  return new constructor({\n    name,\n    fields: {\n      __fake: {\n        type: GraphQLString,\n      },\n    },\n  });\n}\n\nexport function createStub(node: TypeNode, type: 'output'): GraphQLOutputType;\nexport function createStub(node: TypeNode, type: 'input'): GraphQLInputType;\nexport function createStub(node: TypeNode, type: 'output' | 'input'): GraphQLType;\nexport function createStub(node: TypeNode, type: any): any {\n  switch (node.kind) {\n    case Kind.LIST_TYPE:\n      return new GraphQLList(createStub(node.type, type));\n    case Kind.NON_NULL_TYPE:\n      return new GraphQLNonNull(createStub(node.type, type));\n    default:\n      if (type === 'output') {\n        return createNamedStub(node.name.value, 'object');\n      }\n      return createNamedStub(node.name.value, 'input');\n  }\n}\n\nexport function isNamedStub(type: GraphQLNamedType): boolean {\n  if (isObjectType(type) || isInterfaceType(type) || isInputObjectType(type)) {\n    const fields = type.getFields();\n    const fieldNames = Object.keys(fields);\n    return fieldNames.length === 1 && fields[fieldNames[0]].name === '__fake';\n  }\n\n  return false;\n}\n\nexport function getBuiltInForStub(type: GraphQLNamedType): GraphQLNamedType {\n  switch (type.name) {\n    case GraphQLInt.name:\n      return GraphQLInt;\n    case GraphQLFloat.name:\n      return GraphQLFloat;\n    case GraphQLString.name:\n      return GraphQLString;\n    case GraphQLBoolean.name:\n      return GraphQLBoolean;\n    case GraphQLID.name:\n      return GraphQLID;\n    default:\n      return type;\n  }\n}\n"],"version":3}