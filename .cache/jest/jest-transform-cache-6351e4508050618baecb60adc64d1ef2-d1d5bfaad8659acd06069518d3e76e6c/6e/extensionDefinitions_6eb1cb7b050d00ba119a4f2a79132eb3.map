{"file":"/home/ardat_000/Guild/graphql-tools/packages/schema/src/extensionDefinitions.ts","mappings":";;;AAAA,qCAA6D;AAE7D,MAAM,eAAe,GAAG,CAAC,GAAmB,EAAE,EAAE,CAC9C,GAAG,CAAC,IAAI,KAAK,cAAI,CAAC,qBAAqB;IACvC,GAAG,CAAC,IAAI,KAAK,cAAI,CAAC,wBAAwB;IAC1C,GAAG,CAAC,IAAI,KAAK,cAAI,CAAC,2BAA2B;IAC7C,GAAG,CAAC,IAAI,KAAK,cAAI,CAAC,oBAAoB;IACtC,GAAG,CAAC,IAAI,KAAK,cAAI,CAAC,mBAAmB;IACrC,GAAG,CAAC,IAAI,KAAK,cAAI,CAAC,qBAAqB;IACvC,GAAG,CAAC,IAAI,KAAK,cAAI,CAAC,gBAAgB,CAAC;AAErC,SAAgB,oCAAoC,CAAC,GAAiB;IACpE,MAAM,aAAa,GAAqB,EAAE,CAAC;IAC3C,MAAM,SAAS,GAAqB,EAAE,CAAC;IACvC,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;QAC5B,IAAI,eAAe,CAAC,GAAG,CAAC,EAAE;YACxB,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACzB;aAAM;YACL,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACrB;IACH,CAAC,CAAC,CAAC;IAEH,OAAO;QACL,QAAQ,EAAE;YACR,GAAG,GAAG;YACN,WAAW,EAAE,SAAS;SACvB;QACD,aAAa,EAAE;YACb,GAAG,GAAG;YACN,WAAW,EAAE,aAAa;SAC3B;KACF,CAAC;AACJ,CAAC;AArBD,oFAqBC;AAED,SAAgB,0BAA0B,CAAC,GAAiB;IAC1D,MAAM,EAAE,QAAQ,EAAE,GAAG,oCAAoC,CAAC,GAAG,CAAC,CAAC;IAC/D,OAAO,QAAQ,CAAC;AAClB,CAAC;AAHD,gEAGC;AAED,SAAgB,2BAA2B,CAAC,GAAiB;IAC3D,MAAM,EAAE,aAAa,EAAE,GAAG,oCAAoC,CAAC,GAAG,CAAC,CAAC;IACpE,OAAO,aAAa,CAAC;AACvB,CAAC;AAHD,kEAGC","names":[],"sources":["/home/ardat_000/Guild/graphql-tools/packages/schema/src/extensionDefinitions.ts"],"sourcesContent":["import { DocumentNode, DefinitionNode, Kind } from 'graphql';\n\nconst isExtensionNode = (def: DefinitionNode) =>\n  def.kind === Kind.OBJECT_TYPE_EXTENSION ||\n  def.kind === Kind.INTERFACE_TYPE_EXTENSION ||\n  def.kind === Kind.INPUT_OBJECT_TYPE_EXTENSION ||\n  def.kind === Kind.UNION_TYPE_EXTENSION ||\n  def.kind === Kind.ENUM_TYPE_EXTENSION ||\n  def.kind === Kind.SCALAR_TYPE_EXTENSION ||\n  def.kind === Kind.SCHEMA_EXTENSION;\n\nexport function filterAndExtractExtensionDefinitions(ast: DocumentNode) {\n  const extensionDefs: DefinitionNode[] = [];\n  const typesDefs: DefinitionNode[] = [];\n  ast.definitions.forEach(def => {\n    if (isExtensionNode(def)) {\n      extensionDefs.push(def);\n    } else {\n      typesDefs.push(def);\n    }\n  });\n\n  return {\n    typesAst: {\n      ...ast,\n      definitions: typesDefs,\n    },\n    extensionsAst: {\n      ...ast,\n      definitions: extensionDefs,\n    },\n  };\n}\n\nexport function filterExtensionDefinitions(ast: DocumentNode) {\n  const { typesAst } = filterAndExtractExtensionDefinitions(ast);\n  return typesAst;\n}\n\nexport function extractExtensionDefinitions(ast: DocumentNode) {\n  const { extensionsAst } = filterAndExtractExtensionDefinitions(ast);\n  return extensionsAst;\n}\n"],"version":3}