{"file":"/home/ardat_000/Guild/graphql-tools/packages/utils/src/types.ts","mappings":"","names":[],"sources":["/home/ardat_000/Guild/graphql-tools/packages/utils/src/types.ts"],"sourcesContent":["import { GraphQLEnumType, GraphQLInputObjectType, GraphQLScalarType } from 'graphql';\n\nexport interface SchemaPrintOptions {\n  /**\n   * Descriptions are defined as preceding string literals, however an older\n   * experimental version of the SDL supported preceding comments as\n   * descriptions. Set to true to enable this deprecated behavior.\n   * This option is provided to ease adoption and will be removed in v16.\n   *\n   * Default: false\n   */\n  commentDescriptions?: boolean;\n}\n\nexport interface GetDocumentNodeFromSchemaOptions {\n  pathToDirectivesInExtensions?: Array<string>;\n}\n\nexport type PrintSchemaWithDirectivesOptions = SchemaPrintOptions & GetDocumentNodeFromSchemaOptions;\n\nexport type Maybe<T> = null | undefined | T;\n\nexport type Constructor<T> = new (...args: any[]) => T;\n\n/**\n * Options for removing unused types from the schema\n */\nexport interface PruneSchemaOptions {\n  /**\n   * Set to `true` to skip pruning object types or interfaces with no no fields\n   */\n  skipEmptyCompositeTypePruning?: boolean;\n  /**\n   * Set to `true` to skip pruning interfaces that are not implemented by any\n   * other types\n   */\n  skipUnimplementedInterfacesPruning?: boolean;\n  /**\n   * Set to `true` to skip pruning empty unions\n   */\n  skipEmptyUnionPruning?: boolean;\n  /**\n   * Set to `true` to skip pruning unused types\n   */\n  skipUnusedTypesPruning?: boolean;\n}\n\nexport type InputLeafValueTransformer = (type: GraphQLEnumType | GraphQLScalarType, originalValue: any) => any;\nexport type InputObjectValueTransformer = (\n  type: GraphQLInputObjectType,\n  originalValue: Record<string, any>\n) => Record<string, any>;\n"],"version":3}