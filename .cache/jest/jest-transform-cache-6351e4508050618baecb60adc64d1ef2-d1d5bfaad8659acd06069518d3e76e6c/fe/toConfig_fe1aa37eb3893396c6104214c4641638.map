{"file":"/home/ardat_000/Guild/graphql-tools/packages/utils/src/toConfig.ts","mappings":";;;AAUA,SAAgB,uBAAuB,CAAC,KAAwB;IAC9D,OAAO;QACL,WAAW,EAAE,KAAK,CAAC,WAAW;QAC9B,IAAI,EAAE,KAAK,CAAC,IAAI;QAChB,YAAY,EAAE,KAAK,CAAC,YAAY;QAChC,UAAU,EAAE,KAAK,CAAC,UAAU;QAC5B,OAAO,EAAE,KAAK,CAAC,OAAO;KACvB,CAAC;AACJ,CAAC;AARD,0DAQC;AAED,SAAgB,kBAAkB,CAAC,KAA6B;IAC9D,OAAO;QACL,WAAW,EAAE,KAAK,CAAC,WAAW;QAC9B,IAAI,EAAE,KAAK,CAAC,IAAI;QAChB,IAAI,EAAE,4BAA4B,CAAC,KAAK,CAAC,IAAI,CAAC;QAC9C,OAAO,EAAE,KAAK,CAAC,OAAO;QACtB,SAAS,EAAE,KAAK,CAAC,SAAS;QAC1B,iBAAiB,EAAE,KAAK,CAAC,iBAAiB;QAC1C,UAAU,EAAE,KAAK,CAAC,UAAU;QAC5B,OAAO,EAAE,KAAK,CAAC,OAAO;KACvB,CAAC;AACJ,CAAC;AAXD,gDAWC;AAED,SAAgB,4BAA4B,CAAC,IAAoC;IAC/E,MAAM,YAAY,GAAG,EAAE,CAAC;IACxB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;QACjB,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,wBAAwB,CAAC,GAAG,CAAC,CAAC;IACzD,CAAC,CAAC,CAAC;IAEH,OAAO,YAAY,CAAC;AACtB,CAAC;AAPD,oEAOC;AAED,SAAgB,wBAAwB,CAAC,GAAoB;IAC3D,OAAO;QACL,WAAW,EAAE,GAAG,CAAC,WAAW;QAC5B,IAAI,EAAE,GAAG,CAAC,IAAI;QACd,YAAY,EAAE,GAAG,CAAC,YAAY;QAC9B,UAAU,EAAE,GAAG,CAAC,UAAU;QAC1B,OAAO,EAAE,GAAG,CAAC,OAAO;KACrB,CAAC;AACJ,CAAC;AARD,4DAQC","names":[],"sources":["/home/ardat_000/Guild/graphql-tools/packages/utils/src/toConfig.ts"],"sourcesContent":["import {\n  GraphQLArgument,\n  GraphQLFieldConfigArgumentMap,\n  GraphQLField,\n  GraphQLInputField,\n  GraphQLInputFieldConfig,\n  GraphQLArgumentConfig,\n  GraphQLFieldConfig,\n} from 'graphql';\n\nexport function inputFieldToFieldConfig(field: GraphQLInputField): GraphQLInputFieldConfig {\n  return {\n    description: field.description,\n    type: field.type,\n    defaultValue: field.defaultValue,\n    extensions: field.extensions,\n    astNode: field.astNode,\n  };\n}\n\nexport function fieldToFieldConfig(field: GraphQLField<any, any>): GraphQLFieldConfig<any, any> {\n  return {\n    description: field.description,\n    type: field.type,\n    args: argsToFieldConfigArgumentMap(field.args),\n    resolve: field.resolve,\n    subscribe: field.subscribe,\n    deprecationReason: field.deprecationReason,\n    extensions: field.extensions,\n    astNode: field.astNode,\n  };\n}\n\nexport function argsToFieldConfigArgumentMap(args: ReadonlyArray<GraphQLArgument>): GraphQLFieldConfigArgumentMap {\n  const newArguments = {};\n  args.forEach(arg => {\n    newArguments[arg.name] = argumentToArgumentConfig(arg);\n  });\n\n  return newArguments;\n}\n\nexport function argumentToArgumentConfig(arg: GraphQLArgument): GraphQLArgumentConfig {\n  return {\n    description: arg.description,\n    type: arg.type,\n    defaultValue: arg.defaultValue,\n    extensions: arg.extensions,\n    astNode: arg.astNode,\n  };\n}\n"],"version":3}