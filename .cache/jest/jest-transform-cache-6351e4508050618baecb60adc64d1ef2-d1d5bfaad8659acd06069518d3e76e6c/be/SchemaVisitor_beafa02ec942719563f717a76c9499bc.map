{"file":"/home/ardat_000/Guild/graphql-tools/packages/utils/src/SchemaVisitor.ts","mappings":";;;AAcA,4EAA4E;AAC5E,2EAA2E;AAC3E,wEAAwE;AACxE,0EAA0E;AAC1E,MAAsB,aAAa;IAMjC,qEAAqE;IACrE,kBAAkB;IACX,MAAM,CAAC,uBAAuB,CAAC,UAAkB;QACtD,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;YACnC,OAAO,KAAK,CAAC;SACd;QAED,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QAC1C,IAAI,OAAO,MAAM,KAAK,UAAU,EAAE;YAChC,OAAO,KAAK,CAAC;SACd;QAED,IAAI,IAAI,CAAC,IAAI,KAAK,eAAe,EAAE;YACjC,2DAA2D;YAC3D,OAAO,IAAI,CAAC;SACb;QAED,MAAM,IAAI,GAAG,aAAa,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QACjD,IAAI,MAAM,KAAK,IAAI,EAAE;YACnB,uEAAuE;YACvE,wDAAwD;YACxD,OAAO,KAAK,CAAC;SACd;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAED,4EAA4E;IAC5E,0EAA0E;IAC1E,0EAA0E;IAC1E,wEAAwE;IACxE,8DAA8D;IAE9D,gEAAgE;IACzD,WAAW,CAAC,OAAsB,IAAS,CAAC;IAE5C,WAAW,CAChB,OAA0B;IAC1B,gEAAgE;QAC9B,CAAC;IAE9B,WAAW,CAChB,OAA0B;IAC1B,gEAAgE;QAC9B,CAAC;IAE9B,oBAAoB,CACzB,MAA8B,EAC9B,QAEC;IACD,gEAAgE;QACzB,CAAC;IAEnC,uBAAuB,CAC5B,SAA0B,EAC1B,QAGC;IACD,gEAAgE;QAChC,CAAC;IAE5B,cAAc,CACnB,MAA4B;IAC5B,gEAAgE;QAC3B,CAAC;IAExC,gEAAgE;IACzD,UAAU,CAAC,MAAwB,IAAmC,CAAC;IAE9E,gEAAgE;IACzD,SAAS,CAAC,KAAsB,IAAkC,CAAC;IAEnE,cAAc,CACnB,MAAwB,EACxB,QAEC;IACD,gEAAgE;QAC/B,CAAC;IAE7B,gBAAgB,CACrB,OAA+B;IAC/B,gEAAgE;QACzB,CAAC;IAEnC,yBAAyB,CAC9B,MAAyB,EACzB,QAEC;IACD,gEAAgE;QAC9B,CAAC;CACtC;AApGD,sCAoGC","names":[],"sources":["/home/ardat_000/Guild/graphql-tools/packages/utils/src/SchemaVisitor.ts"],"sourcesContent":["import {\n  GraphQLArgument,\n  GraphQLEnumType,\n  GraphQLEnumValue,\n  GraphQLField,\n  GraphQLInputField,\n  GraphQLInputObjectType,\n  GraphQLInterfaceType,\n  GraphQLObjectType,\n  GraphQLScalarType,\n  GraphQLSchema,\n  GraphQLUnionType,\n} from 'graphql';\n\n// Abstract base class of any visitor implementation, defining the available\n// visitor methods along with their parameter types, and providing a static\n// helper function for determining whether a subclass implements a given\n// visitor method, as opposed to inheriting one of the stubs defined here.\nexport abstract class SchemaVisitor {\n  // All SchemaVisitor instances are created while visiting a specific\n  // GraphQLSchema object, so this property holds a reference to that object,\n  // in case a visitor method needs to refer to this.schema.\n  public schema!: GraphQLSchema;\n\n  // Determine if this SchemaVisitor (sub)class implements a particular\n  // visitor method.\n  public static implementsVisitorMethod(methodName: string): boolean {\n    if (!methodName.startsWith('visit')) {\n      return false;\n    }\n\n    const method = this.prototype[methodName];\n    if (typeof method !== 'function') {\n      return false;\n    }\n\n    if (this.name === 'SchemaVisitor') {\n      // The SchemaVisitor class implements every visitor method.\n      return true;\n    }\n\n    const stub = SchemaVisitor.prototype[methodName];\n    if (method === stub) {\n      // If this.prototype[methodName] was just inherited from SchemaVisitor,\n      // then this class does not really implement the method.\n      return false;\n    }\n\n    return true;\n  }\n\n  // Concrete subclasses of SchemaVisitor should override one or more of these\n  // visitor methods, in order to express their interest in handling certain\n  // schema types/locations. Each method may return null to remove the given\n  // type from the schema, a non-null value of the same type to update the\n  // type in the schema, or nothing to leave the type as it was.\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  public visitSchema(_schema: GraphQLSchema): void {}\n\n  public visitScalar(\n    _scalar: GraphQLScalarType\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n  ): GraphQLScalarType | void | null {}\n\n  public visitObject(\n    _object: GraphQLObjectType\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n  ): GraphQLObjectType | void | null {}\n\n  public visitFieldDefinition(\n    _field: GraphQLField<any, any>,\n    _details: {\n      objectType: GraphQLObjectType | GraphQLInterfaceType;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n  ): GraphQLField<any, any> | void | null {}\n\n  public visitArgumentDefinition(\n    _argument: GraphQLArgument,\n    _details: {\n      field: GraphQLField<any, any>;\n      objectType: GraphQLObjectType | GraphQLInterfaceType;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n  ): GraphQLArgument | void | null {}\n\n  public visitInterface(\n    _iface: GraphQLInterfaceType\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n  ): GraphQLInterfaceType | void | null {}\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  public visitUnion(_union: GraphQLUnionType): GraphQLUnionType | void | null {}\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  public visitEnum(_type: GraphQLEnumType): GraphQLEnumType | void | null {}\n\n  public visitEnumValue(\n    _value: GraphQLEnumValue,\n    _details: {\n      enumType: GraphQLEnumType;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n  ): GraphQLEnumValue | void | null {}\n\n  public visitInputObject(\n    _object: GraphQLInputObjectType\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n  ): GraphQLInputObjectType | void | null {}\n\n  public visitInputFieldDefinition(\n    _field: GraphQLInputField,\n    _details: {\n      objectType: GraphQLInputObjectType;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n  ): GraphQLInputField | void | null {}\n}\n"],"version":3}