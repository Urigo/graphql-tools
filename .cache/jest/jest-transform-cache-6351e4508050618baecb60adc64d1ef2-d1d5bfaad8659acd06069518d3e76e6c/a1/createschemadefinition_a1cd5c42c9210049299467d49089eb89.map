{"file":"/home/ardat_000/Guild/graphql-tools/packages/utils/src/create-schema-definition.ts","mappings":";;;AAEA,SAAgB,sBAAsB,CACpC,GAIC,EACD,MAEC;IAED,MAAM,UAAU,GAIZ,EAAE,CAAC;IAEP,IAAI,GAAG,CAAC,KAAK,EAAE;QACb,UAAU,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;KACzC;IAED,IAAI,GAAG,CAAC,QAAQ,EAAE;QAChB,UAAU,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;KAC/C;IAED,IAAI,GAAG,CAAC,YAAY,EAAE;QACpB,UAAU,CAAC,YAAY,GAAG,GAAG,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;KACvD;IAED,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;SACnC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,KAAK,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SACvF,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAElB,IAAI,MAAM,CAAC,MAAM,EAAE;QACjB,OAAO,YAAY,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;KAC1C;IAED,IAAI,MAAM,IAAI,MAAM,CAAC,KAAK,EAAE;QAC1B,OAAO,2BAA2B,CAAC;KACpC;IAED,OAAO,SAAS,CAAC;AACnB,CAAC;AAzCD,wDAyCC","names":[],"sources":["/home/ardat_000/Guild/graphql-tools/packages/utils/src/create-schema-definition.ts"],"sourcesContent":["import { GraphQLObjectType } from 'graphql';\n\nexport function createSchemaDefinition(\n  def: {\n    query: string | GraphQLObjectType | null;\n    mutation: string | GraphQLObjectType | null;\n    subscription: string | GraphQLObjectType | null;\n  },\n  config?: {\n    force?: boolean;\n  }\n): string {\n  const schemaRoot: {\n    query?: string;\n    mutation?: string;\n    subscription?: string;\n  } = {};\n\n  if (def.query) {\n    schemaRoot.query = def.query.toString();\n  }\n\n  if (def.mutation) {\n    schemaRoot.mutation = def.mutation.toString();\n  }\n\n  if (def.subscription) {\n    schemaRoot.subscription = def.subscription.toString();\n  }\n\n  const fields = Object.keys(schemaRoot)\n    .map(rootType => (schemaRoot[rootType] ? `${rootType}: ${schemaRoot[rootType]}` : null))\n    .filter(a => a);\n\n  if (fields.length) {\n    return `schema { ${fields.join('\\n')} }`;\n  }\n\n  if (config && config.force) {\n    return ` schema { query: Query } `;\n  }\n\n  return undefined;\n}\n"],"version":3}