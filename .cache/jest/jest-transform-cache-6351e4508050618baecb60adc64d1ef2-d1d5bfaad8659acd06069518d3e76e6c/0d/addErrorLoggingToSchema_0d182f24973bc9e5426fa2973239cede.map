{"file":"/home/ardat_000/Guild/graphql-tools/packages/schema/src/addErrorLoggingToSchema.ts","mappings":";;;AACA,gDAA6D;AAC7D,6DAA0D;AAG1D,SAAgB,uBAAuB,CAAC,MAAqB,EAAE,MAAgB;IAC7E,IAAI,CAAC,MAAM,EAAE;QACX,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;KAC1C;IACD,IAAI,OAAO,MAAM,CAAC,GAAG,KAAK,UAAU,EAAE;QACpC,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;KAClD;IACD,OAAO,iBAAS,CAAC,MAAM,EAAE;QACvB,CAAC,kBAAU,CAAC,YAAY,CAAC,EAAE,CAAC,WAAW,EAAE,SAAS,EAAE,QAAQ,EAAE,EAAE,CAAC,CAAC;YAChE,GAAG,WAAW;YACd,OAAO,EAAE,uCAAkB,CAAC,WAAW,CAAC,OAAO,EAAE,MAAM,EAAE,GAAG,QAAQ,IAAI,SAAS,EAAE,CAAC;SACrF,CAAC;KACH,CAAC,CAAC;AACL,CAAC;AAbD,0DAaC","names":[],"sources":["/home/ardat_000/Guild/graphql-tools/packages/schema/src/addErrorLoggingToSchema.ts"],"sourcesContent":["import { GraphQLSchema } from 'graphql';\nimport { mapSchema, MapperKind } from '@graphql-tools/utils';\nimport { decorateWithLogger } from './decorateWithLogger';\nimport { ILogger } from './types';\n\nexport function addErrorLoggingToSchema(schema: GraphQLSchema, logger?: ILogger): GraphQLSchema {\n  if (!logger) {\n    throw new Error('Must provide a logger');\n  }\n  if (typeof logger.log !== 'function') {\n    throw new Error('Logger.log must be a function');\n  }\n  return mapSchema(schema, {\n    [MapperKind.OBJECT_FIELD]: (fieldConfig, fieldName, typeName) => ({\n      ...fieldConfig,\n      resolve: decorateWithLogger(fieldConfig.resolve, logger, `${typeName}.${fieldName}`),\n    }),\n  });\n}\n"],"version":3}